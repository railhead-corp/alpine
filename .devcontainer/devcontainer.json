// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/go
{
	"name": "Go - Alpine",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"build": {
		"dockerfile": "DockerFile"
	},
	"mounts": [
		// When you clone all Railhead Repos into one "root" folder on your Windows Host, you can easily
		// mount that root in here to expedite editing/troubleshooting libraries before needing to commit/push them
		// ie. in this project's go.mod:  replace github.com/railhead-corp/ldvr4k_restApiLibrary v1.0.11 => ../ldvr4k_restApiLibrary
		// Since each RH Engineer will likely have their repos in a different location on their drive,
		// we can maintain one committed var here that references that root, simply:
		// Start Menu -> Search "Environment" -> Edit the System Environment Variables -> Environment Variables... (button) ->
		// System Variables (bottom) -> New... (button) -> Variable Name:  REPOS_ROOT   Variable Value: Path to your repos root folder,
		// ie. c:\repos\GitHub\railhead-corp\   ensure there's a trailing backslash
		// on the chance you want to experiment with hard-coded paths in this file, escape backslashes
		// ie. c:\\repos\\GitHub\\railhead-corp
		"type=bind,source=${localEnv:REPOS_ROOT},target=/workspaces,consistency=cached"
	],
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-vscode.makefile-tools",
				"Gruntfuggly.todo-tree",
				"eamodio.gitlens",
				"ms-azuretools.vscode-docker",
				"golang.go"
			]
		}
	},
	"containerEnv": {
		// GOPRIVATE env var needed for `go mod tidy`
		"GOPRIVATE": "github.com/railhead-corp/*"
	},
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		// docker-outside-of-docker enables docker build / login / push
		//"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
	},
	"runArgs": [
		// the name of the docker development container this file generates running on the host
		"--name",
		"vsc-${localWorkspaceFolderBasename}",
		"-u",
		"1000"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// when importing multiple repos, you'll need to mark them as safe https://stackoverflow.com/a/71904131
	// append "&& git config --global --add safe.directory '*'"
	"postCreateCommand": ".devcontainer/postCreateCommand.sh"
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}